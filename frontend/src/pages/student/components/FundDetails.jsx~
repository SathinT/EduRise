import React, { useState } from 'react';
import { ArrowLeftIcon, SendIcon } from 'lucide-react';

export function FundDetails({ fund, onBack }) {
    if (!fund) {
        return (
            <div className="text-gray-500 p-4">
                ⚠️ No fund selected.
                <button onClick={onBack} className="ml-2 text-blue-500 underline text-sm" >
                    Go back
                </button>
            </div>
        );
    }
    const [showThankNote, setShowThankNote] = useState(false);
    const [selectedDonor, setSelectedDonor] = useState(null);

    const donors = fund.donors || [];

    const progress = fund.goalAmount > 0 ? Math.min(100, Math.round((fund.raisedAmount / fund.goalAmount) * 100)) : 0;

    return (
        <div>
            <button
                onClick={onBack}
                className="text-gray-600 mb-4 hover:text-gray-800"
            >
                ← Back to Funds
            </button>
            <div className="max-w-4xl">
                <div className="space-y-6">
                    <div className="aspect-video bg-gray-100 rounded-lg"></div>
                    <div className="space-y-4">
                        <div className="flex justify-between items-start">
                            <div>
                                <h2 className="text-xl font-semibold">{fund.title}</h2>
                                <p className="text-gray-600 mt-1">
                                    Created on {new Date(fund.createdAt).toLocaleDateString()}
                                </p>
                            </div>
                            <div className="flex gap-2">
                                <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                                    fund.status === 'Approved'
                                        ? 'bg-green-100 text-green-700'
                                        : fund.status === 'Rejected'
                                            ? 'bg-red-100 text-red-700'
                                            : 'bg-yellow-100 text-yellow-700'
                                }`}>
                                    {fund.status || (fund.approved ? 'Approved' : 'Pending')}
                                </span>
                                <button
                                    className="px-3 py-1 bg-yellow-500 text-white rounded-full text-sm hover:bg-yellow-600"
                                    onClick={async () => {
                                        const token = localStorage.getItem('token');
                                        try {
                                            const res = await fetch(`http://localhost:5000/api/funding/${fund._id}/complete`, {
                                                method: 'PUT',
                                                headers: {
                                                    Authorization: `Bearer ${token}`
                                                }
                                            });

                                            if (res.ok) {
                                                alert('✅ Fund marked as completed and moved to Success Stories');
                                                onBack();
                                            } else {
                                                const data = await res.json();
                                                alert(data.message || 'Failed to mark as completed');
                                            }
                                        } catch (err) {
                                            console.error(err);
                                            alert('Server error');
                                        }
                                    }}
                                >
                                    Mark Complete
                                </button>

                            </div>
                        </div>

                        <div className="space-y-2">
                            <div className="flex justify-between text-sm">
                                <span className="text-gray-600">Progress</span>
                                <span className="font-medium">{progress}%</span>
                            </div>
                            <div className="h-2 bg-gray-100 rounded-full overflow-hidden">
                                <div
                                    className="h-full bg-yellow-500 rounded-full"
                                    style={{ width: `${progress}%` }}
                                ></div>
                            </div>
                            <div className="flex justify-between text-sm">
                                <span className="text-gray-600">₹{fund.raisedAmount.toLocaleString()} raised</span>
                                <span className="text-gray-600">
                                    Target: ₹{fund.goalAmount.toLocaleString()}
                                </span>
                            </div>
                        </div>

                        <div className="prose max-w-none">
                            <h3 className="text-lg font-medium">About this Fund</h3>
                            <p className="text-gray-600">{fund.description}</p>
                        </div>

                        <div>
                            {fund.status === 'Completed' && (
                                <div className="space-y-6 border-t pt-6"> {fund.impact && ( <div> <h3 className="text-lg font-medium mb-2">Impact Story</h3> <p className="text-gray-700">{fund.impact}</p> </div> )}
                                    {fund.images?.length > 0 && (
                                        <div>
                                            <h3 className="text-lg font-medium mb-2">Event Images</h3>
                                            <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                                                {fund.images.map((url, i) => (
                                                    <img
                                                        key={i}
                                                        src={`http://localhost:5000/uploads/${url}`}
                                                        alt={`Event image ${i + 1}`}
                                                        className="rounded-lg object-cover w-full h-40"
                                                    />
                                                ))}
                                            </div>
                                        </div>
                                    )}

                                    {fund.videos?.length > 0 && (
                                        <div>
                                            <h3 className="text-lg font-medium mb-2">Event Videos</h3>
                                            <div className="space-y-4">
                                                {fund.videos.map((url, i) => (
                                                    <video key={i} controls className="w-full rounded-lg">
                                                        <source src={url} type="video/mp4" />
                                                        Your browser does not support the video tag.
                                                    </video>
                                                ))}
                                            </div>
                                        </div>
                                    )}
                                </div> )}
                            <h3 className="text-lg font-medium mb-3">Supporting Documents</h3>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                {fund.documents?.map((doc, i) => (
                                    <div key={i} className="border rounded-lg p-4 flex items-center gap-3">
                                        <div className="h-10 w-10 bg-gray-100 rounded"></div>
                                        <div>
                                            <p className="font-medium">{doc.name}</p>
                                            <p className="text-sm text-gray-600">
                                                <a href={doc.url} target="_blank" rel="noreferrer noopener" className="text-blue-500 underline">View</a>
                                            </p>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </div>
                    </div>

                    <div className="border-t pt-6">
                        <h3 className="text-lg font-medium mb-4">Fund Donors</h3>
                        <div className="space-y-4">
                            {donors.map((donor) => (
                                <div
                                    key={donor.id || donor._id}
                                    className="bg-white rounded-lg border border-gray-200 p-4"
                                >
                                    <div className="flex justify-between items-start">
                                        <div>
                                            <h4 className="font-medium">{donor.name}</h4>
                                            <p className="text-sm text-gray-600">{donor.email}</p>
                                            <div className="mt-1 flex items-center gap-3 text-sm">
                                                <span className="text-gray-600">
                                                    Donated: ₹{donor.amount?.toLocaleString?.() || donor.amount}
                                                </span>
                                                <span className="text-gray-400">&bull;</span>
                                                <span className="text-gray-600">
                                                    {new Date(donor.date).toLocaleDateString()}
                                                </span>
                                            </div>
                                        </div>
                                        <button
                                            onClick={() => {
                                                setSelectedDonor(donor);
                                                setShowThankNote(true);
                                            }}
                                            className={`px-3 py-1.5 rounded text-sm flex items-center gap-2 ${
                                                donor.thanked
                                                    ? 'bg-gray-100 text-gray-600 hover:bg-gray-200'
                                                    : 'bg-yellow-500 text-white hover:bg-yellow-600'
                                            }`}
                                        >
                                            <SendIcon size={14} />
                                            {donor.thanked ? 'Send Another Note' : 'Send Thank You'}
                                        </button>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            </div>

            {showThankNote && selectedDonor && (
                <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
                    <div className="bg-white rounded-lg max-w-lg w-full p-6">
                        <div className="flex justify-between items-start mb-4">
                            <div>
                                <h3 className="text-lg font-medium">
                                    Send Thank You Note to {selectedDonor.name}
                                </h3>
                                <p className="text-sm text-gray-600">
                                    Donation: ₹{selectedDonor.amount} on{' '}
                                    {new Date(selectedDonor.date).toLocaleDateString()}
                                </p>
                            </div>
                            <button
                                onClick={() => setShowThankNote(false)}
                                className="text-gray-500 hover:text-gray-700"
                            >
                                ×
                            </button>
                        </div>
                        <form className="space-y-4">
                            <div>
                                <label className="block text-sm font-medium text-gray-700 mb-1">
                                    Your Message
                                </label>
                                <textarea
                                    className="w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-1 focus:ring-yellow-500"
                                    rows={6}
                                    placeholder="Write your personalized thank you message here..."
                                ></textarea>
                            </div>
                            <div className="flex justify-end gap-3">
                                <button
                                    type="button"
                                    onClick={() => setShowThankNote(false)}
                                    className="px-4 py-2 border rounded-md hover:bg-gray-50"
                                >
                                    Cancel
                                </button>
                                <button
                                    type="submit"
                                    className="bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 flex items-center gap-2"
                                >
                                    <SendIcon size={16} />
                                    Send Note
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            )}
        </div>
    );
}
